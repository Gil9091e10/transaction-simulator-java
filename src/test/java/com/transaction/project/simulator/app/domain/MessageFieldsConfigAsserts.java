package com.transaction.project.simulator.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MessageFieldsConfigAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMessageFieldsConfigAllPropertiesEquals(MessageFieldsConfig expected, MessageFieldsConfig actual) {
        assertMessageFieldsConfigAutoGeneratedPropertiesEquals(expected, actual);
        assertMessageFieldsConfigAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMessageFieldsConfigAllUpdatablePropertiesEquals(MessageFieldsConfig expected, MessageFieldsConfig actual) {
        assertMessageFieldsConfigUpdatableFieldsEquals(expected, actual);
        assertMessageFieldsConfigUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMessageFieldsConfigAutoGeneratedPropertiesEquals(MessageFieldsConfig expected, MessageFieldsConfig actual) {
        assertThat(expected)
            .as("Verify MessageFieldsConfig auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMessageFieldsConfigUpdatableFieldsEquals(MessageFieldsConfig expected, MessageFieldsConfig actual) {
        assertThat(expected)
            .as("Verify MessageFieldsConfig relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getFieldLength()).as("check fieldLength").isEqualTo(actual.getFieldLength()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMessageFieldsConfigUpdatableRelationshipsEquals(MessageFieldsConfig expected, MessageFieldsConfig actual) {
        assertThat(expected)
            .as("Verify MessageFieldsConfig relationships")
            .satisfies(e -> assertThat(e.getMessageIsoConfig()).as("check messageIsoConfig").isEqualTo(actual.getMessageIsoConfig()))
            .satisfies(e -> assertThat(e.getMessageFieldType()).as("check messageFieldType").isEqualTo(actual.getMessageFieldType()));
    }
}
