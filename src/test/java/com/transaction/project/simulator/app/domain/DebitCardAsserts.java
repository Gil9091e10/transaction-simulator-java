package com.transaction.project.simulator.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DebitCardAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDebitCardAllPropertiesEquals(DebitCard expected, DebitCard actual) {
        assertDebitCardAutoGeneratedPropertiesEquals(expected, actual);
        assertDebitCardAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDebitCardAllUpdatablePropertiesEquals(DebitCard expected, DebitCard actual) {
        assertDebitCardUpdatableFieldsEquals(expected, actual);
        assertDebitCardUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDebitCardAutoGeneratedPropertiesEquals(DebitCard expected, DebitCard actual) {
        assertThat(expected)
            .as("Verify DebitCard auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDebitCardUpdatableFieldsEquals(DebitCard expected, DebitCard actual) {
        // empty method

    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDebitCardUpdatableRelationshipsEquals(DebitCard expected, DebitCard actual) {
        // empty method
    }
}
